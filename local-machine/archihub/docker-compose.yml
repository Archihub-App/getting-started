version: "3.9"

# ----------- ENVIRONMENT VARIABLES -----------
x-backend_env_variables: &backend_env_variables
  ENVIRONMENT_NAME: ${ENVIRONMENT_NAME}
  FRONTEND_HOST: ${FRONTEND_HOST}
  FLASK_APP: app.py
  FLASK_ENV: prod
  FLASK_DEBUG: 1
  FLASK_RUN_PORT: ${BACKEND_PORT_FLASK}
  FLASK_RUN_HOST: ${FLASK_HOST}
  MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  MONGO_INITDB_DATABASE: archihub-${ENVIRONMENT_NAME}
  MONGO_DATABASE: archihub-${ENVIRONMENT_NAME}
  CELERY_BROKER_URL: ${CELERY_BROKER_URL}
  CELERY_BROKER_HOST: ${CELERY_BROKER_HOST}
  FLASK_DEBUG: ${FLASK_DEBUG}
  USER_FILES_PATH: ${USER_FILES_PATH}
  WEB_FILES_PATH: ${WEB_FILES_PATH}
  ORIGINAL_FILES_PATH: ${ORIGINAL_FILES_PATH}
  TEMPORAL_FILES_PATH: ${TEMPORAL_FILES_PATH}
  MONGO_IP_SERVER: ${MONGO_HOST}
  MONGO_HOST: ${MONGO_HOST}
  MONGO_PORT: '27017'
# --------------------------------------------
x-mongo_db_env_variables: &mongo_db_env_variables
  MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  MONGO_INITDB_DATABASE: archihub-${ENVIRONMENT_NAME}
  MONGO_HOST: ${MONGO_HOST}
  MONGO_PORT: '27017'

services:

# ---------------------- MONGO DATABASE SERVICE ----------------------
  archihub_mongodb_server_01:
    image: mongo:5.0.9
    ports:
      - "27017:27017"
    environment:
      <<: *mongo_db_env_variables
    volumes:
      - ./mongo_db/backup/:/data_restore/
      - ./mongo_db/backup_restore.sh:/docker-entrypoint-initdb.d/backup_restore.sh
    networks:
      - cev_mongo_network

# ----------- POPULATION OF ELASTIC INDEXES FROM MONGO DATABASE DOCUMENTS -----------
  archihub_flask_backend:
    build:
      context: ./backend
      args:
        - PORT=${BACKEND_PORT_FLASK}
    ports:
      - ${BACKEND_PORT_FLASK}:${BACKEND_PORT_FLASK}
    environment:
      <<: *backend_env_variables
      MONGO_IP_SERVER: $MONGO_HOST
    volumes:
      - ./stash/elastic_certs:/stash/elastic_certs:ro
      - ./stash/wait_for:/wait_for:ro
      - "./elastic_db/uploads:/app/uploads"
      - "../userfiles:/app/userfiles"
      - "../webfiles:/app/webfiles"
      - "../original:/app/uploads"
      - "../temporal:/app/temporal"
    depends_on:
      - archihub_mongodb_server_01
      - redis
    command: ["/app/backup_mongo.sh"]
    networks:
      - cev_mongo_network
      - cev_elastic_network

  celery_worker:
    build:
      context: ./backend
      args:
        - PORT=${BACKEND_PORT_FLASK}
    environment:
      <<: *backend_env_variables
      MONGO_IP_SERVER: $MONGO_HOST
    volumes:
      - "../userfiles:/app/userfiles"
      - "../webfiles:/app/webfiles"
      - "../original:/app/uploads"
      - "../temporal:/app/temporal"
    depends_on:
      - archihub_flask_backend
      - redis
    working_dir: /app
    command: 'celery --app app.celery_app worker --loglevel INFO'
    networks:
      - cev_mongo_network
      - cev_elastic_network

# ---------------------- FRONT END SERVICE ----------------------
  archihub_frontend:
    build:
      context: ./frontend
      args:
        - BACK_ARG=http://${FRONTEND_HOST}:${BACKEND_PORT_EXTERNAL}
    ports:
      - "80:80"
    depends_on:
      - archihub_flask_backend


  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - cev_mongo_network
      - cev_elastic_network
# ---------------------- NETWORKS LISTING ----------------------

networks:
  app-network:
    driver: bridge
  cev_mongo_network:
    name: cev_mongo_network
  cev_elastic_network:
    name: cev_elastic_network
  default:
    attachable: false